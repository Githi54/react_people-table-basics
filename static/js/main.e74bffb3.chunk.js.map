{"version":3,"sources":["components/Loader/pages/NavigationItem.tsx","components/Loader/pages/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/Loader/pages/PersonLink.tsx","components/Loader/pages/PeopleList.tsx","App.tsx","index.tsx"],"names":["NavigationItem","to","content","className","isActive","classNames","Navigation","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","setSelectedSlug","slug","sex","onClick","name","PeopleList","useState","select","setSelect","people","setPeople","errorMessage","setErrorMessage","useEffect","peopleFromServer","catch","findParents","parentName","parentObj","find","length","map","born","died","motherName","fatherName","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e74bffb3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  content: string;\n};\n\nexport const NavigationItem: React.FC<Props> = ({\n  to,\n  content,\n}) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {content}\n    </NavLink>\n  );\n};\n","import { NavigationItem } from './NavigationItem';\n\nexport const Navigation = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationItem to=\"/\" content=\"Home\" />\n        <NavigationItem to=\"/people\" content=\"People\" />\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person;\n  setSelectedSlug: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  setSelectedSlug,\n}) => {\n  const handleClick = (slug: string): void => {\n    setSelectedSlug(slug);\n  };\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n      onClick={() => handleClick(person.slug)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { getPeople } from '../../../api';\nimport { Person } from '../../../types';\nimport { Loader } from '../Loader';\nimport { PersonLink } from './PersonLink';\n\nexport const PeopleList = () => {\n  const [select, setSelect] = useState<string>('');\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const loadPeople = () => {\n    getPeople()\n      .then(peopleFromServer => setPeople(peopleFromServer))\n      .catch(() => {\n        setErrorMessage('Something went wrong');\n      });\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const findParents = (\n    parentName: string | null,\n  ): string | JSX.Element | null => {\n    const parentObj = people?.find(({ name }) => name === parentName);\n\n    return parentObj\n      ? (\n        <PersonLink\n          person={parentObj}\n          setSelectedSlug={setSelect}\n        />\n      )\n      : parentName;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {(!people && !errorMessage.length) && (\n            <Loader />\n          )}\n\n          {errorMessage.length > 0 && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {(people && people?.length > 0) && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people?.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    className={classNames(\n                      { 'has-background-warning': select === person.slug },\n                    )}\n                    key={person.slug}\n                  >\n                    <td>\n                      <PersonLink\n                        person={person}\n                        setSelectedSlug={setSelect}\n                      />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {findParents(person.motherName) || '-'}\n                    </td>\n                    <td>\n                      {findParents(person.fatherName) || '-'}\n                    </td>\n                  </tr>\n                ))}\n                {(people && people?.length === 0) && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Loader/pages/Navigation';\nimport { PeopleList } from './components/Loader/pages/PeopleList';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route\n                index\n                element={(\n                  <PeopleList />\n                )}\n              />\n              <Route\n                path=\":slug\"\n                element={(\n                  <PeopleList />\n                )}\n              />\n            </Route>\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}